unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Grids;

type mas= array[1..10,1..10] of real;
  mas1 = array[1..10] of real;
  TForm1 = class(TForm)
    Matr: TStringGrid;
    Svb: TStringGrid;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Eps: TEdit;
    Label1: TLabel;
    Razm: TEdit;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Memo1: TMemo;
    Label5: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;
 const nmax=20;
var i,j,n:integer;  p,p1:integer;
  d:real;
  mxz:mas1;
  tmp:mas;

  A: array [1..nmax,1..nmax+1] of real; //расширенная матрица системы
  X: array [1..nmax] of real; // решение системы
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
begin
  Memo1.Clear;            // Ввод начальных данных
  Matr.Cells[0,0]:='20,9';
  Matr.Cells[1,0]:= '1,2';
  Matr.Cells[2,0]:='2,1';
  Matr.Cells[3,0]:='0,9';
  Matr.Cells[0,1]:='1,2';
  Matr.Cells[1,1]:='21,2';
  Matr.Cells[2,1]:='1,5';
  Matr.Cells[3,1]:='2,5';
  Matr.Cells[0,2]:='2,1';
  Matr.Cells[1,2]:='1,5 ';
  Matr.Cells[2,2]:='19,8';
  Matr.Cells[3,2]:='1,3';
  Matr.Cells[0,3]:='0,9';
  Matr.Cells[1,3]:='2,5 ';
  Matr.Cells[2,3]:='1,3';
  Matr.Cells[3,3]:='32,12';
  Svb.Cells[0,0]:='21,7';
  Svb.Cells[0,1]:='27,46';
  Svb.Cells[0,2]:='28,76';
  Svb.Cells[0,3]:='49,72';
end;

procedure TForm1.Button4Click(Sender: TObject);
begin
Application.Terminate;   //выход из приложения
end;

procedure TForm1.Button3Click(Sender: TObject);
begin
  n:=StrToInt(Razm.Text);  //задаем количество неизвестных
  for i:=0 to n do         //цикл обнуления матрицы
    for j:=0 to n do begin
      Matr.Cells[i,j]:='';
      Svb.Cells[0,j]:='';
    end;
  //задаем размеры матрицы
  Matr.ColCount:=n;
  Matr.RowCount:=n;
  Svb.RowCount:=n;
end;

procedure TForm1.Button2Click(Sender: TObject);
var x0: array [1..nmax] of real;//начальное приближение
    p,s,am,bm,t,e:real;
 begin
 e:=StrToFloat(Eps.Text);
  n:=StrToInt(Razm.Text);
  for i:=1 to n do
    for j:=1 to n do
    a[i,j]:=StrToFloat(Matr.Cells[j-1,i-1]);
   for i:=1 to n do
    a[i,n+1]:=Strtofloat(Svb.Cells[0,i-1]);
  //Проверка достаточного условия сходимости: абсолютная сумма недиагональных
  //коэффициентов элементов строки должна быть меньше модуля диагональных
  //коэффициентов этой строки
  for i:=1 to n do
    begin
     p:=0;
      for j:=1 to n-1 do //цикл получения суммы модулей недиагональных элементов
        if j<>i then p:=p+abs(a[i, j]);
    if abs(a[i,i])<p then //вывод "Итерационный процесс расходится" и закрытие приложения
      begin
       messageDLG('Итерационный процесс расходится',mtWarning,[mbOk],0);
        Exit;
      end;
    end;
   //приводим систему к нормальному виду
   for i:=1 to n do
    begin
      for j:=1 to n do
        if j<>i then
          a[i,j]:=-a[i, j]/a[i, i];
      a[i,n+1]:=a[i,n+1]/a[i,i];
      a[i,i]:=0;
    end;
    //вычисление m-нормы матрицы системы уравнений и столбца свободных членов
   for i:=1 to n do
    begin
     s:=0;
      for j:=1 to n do
        s:=s+abs(a[i, j]);
      if i = 1 then
         begin
           am:=s;
           bm:=abs(a[1, n+1]);
         end
      else
        begin
          if s>am then
             am:=s;
          if abs(a[i,n+1])>bm then
             bm:=abs(a[i,n+1]);
        end;
    end;

    //устанавливаем начальные приближения равные bi
      x0[i]:=a[i,n+1];
    //цикл вычисления последующих приближений
      t:=0;

    for i:=1 to n do //цикл вычисления нового значения корня xi
     begin
       s:=0;
       for j:=1 to n do
          s:=s+a[i,j]*x0[j];
       x[i]:=a[i,n+1]+s;
     end;
    t:=t+1;
    for i:=1 to n do
      x0[i]:=x[i];

  // вывод решения
   memo1.lines.Add('Решение методом простой итерации:');
   for i:=1 to n do
     memo1.lines.Add('x'+inttostr(i)+'='+floattostrf(x[i],fffixed,12,7));
end;
procedure TForm1.Button1Click(Sender: TObject);
  var a: mas;
      b,x: mas1;
      h: Double;
      i,j,k,n:integer;
begin
  //Ввод данных
  //Размерность системы
  n := StrToIntDef(Text, matr.ColCount);
  //Коэффициенты
  for j := 0 to n - 1 do
    for i := 0 to n - 1 do
      a[i + 1, j + 1] := StrToFloatDef(matr.Cells[j, i], 0);
  //Правая часть уравнения
  for I := 0 to n - 1 do b[i + 1] := StrToFloatDef(svb.Cells[0, i], 0);
  //Прямой ход - исключение переменных
  for i:=1 to n-1 do
    for j:=i+1 to n do
    begin
      a[j,i]:=-a[j,i]/a[i,i];
      for k:=i+1 to n do
        a[j,k]:=a[j,k]+a[j,i]*a[i,k];
        b[j]:=b[j]+a[j,i]*b[i]
    end;
    x[n]:=b[n]/a[n,n];
    //Обратный ход - нахождение корней
    for i:=n-1 downto 1 do
    begin
      h:=b[i];
      for j:=i+1 to n do h:=h-x[j]*a[i,j];
      x[i]:=h/a[i,i]
    end;

     memo1.lines.Add('Решение методом Гаусса:');
   for i:=1 to n do
    begin
      Memo1.Lines.Add('x'+inttostr(i)+'='+floattostrf((x[i]),fffixed,12,7));
     end;
end;
end.



